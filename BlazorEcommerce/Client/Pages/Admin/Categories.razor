@page "/admin/categories"
@inject ICategoryService CategoryService
@attribute [Authorize(Roles = "Admin")]
@implements IDisposable

<h3>Categories</h3>

<div class="header">
    <div class="col">Name</div>
    <div class="col">Url</div>
    <div class="col">Visible</div>
    <div class="col"></div>

</div>

@if (CategoryService.AdminCategories != null)
{

    @foreach (var category in CategoryService.AdminCategories)
    {
        if (category.Editing)
        {
            <EditForm Model="EditingCategory" OnSubmit="UpdateCategory">
                <div class="row">
                    <div class="col">
                        <InputText @bind-Value="EditingCategory.Name" class="form-control" />
                    </div>
                    <div class="col">
                        <InputText @bind-Value="EditingCategory.Url" class="form-control" />
                    </div>
                    <div class="col col-visible">
                        <InputCheckbox @bind-Value="EditingCategory.Visible" style="transform: scale(1.5, 1.5)" class="big-checkbox" />
                    </div>
                    <div class="col">
                        <button type="submit" class="btn btn-primary">
                            <i class="oi oi-cloud-upload"></i>
                        </button>
                        <button class="btn btn-primary" @onclick="CancelEditing">
                            <i class="oi oi-circle-x"></i>
                        </button>
                    </div>
                </div>
            </EditForm>
        }
        else
        {
            <div class="row">
                <div class="col">@category.Name</div>
                <div class="col">@category.Url</div>
                <div class="col col-visible">
                    <span>@(category.Visible ? "✔️" : "")</span>
                </div>
                <div class="col">
                    <button class="btn btn-primary" @onclick="() => EditCategory(category)">
                        <i class="oi oi-pencil"></i>
                    </button>
                    <button class="btn btn-primary" @onclick="() => DeleteCategory(category.Id)">
                        <i class="oi oi-trash"></i>
                    </button>
                </div>
            </div>

        }

    }
}
<button class="btn btn-primary" @onclick="CreateNewCategory">
    <i class="oi oi-plus"></i> Add New Category
</button>

@code {

    public Category EditingCategory { get; set; } = null!;

    protected override async Task OnInitializedAsync()
    {
        await CategoryService.GetAdminCategories();
        CategoryService.OnChanged += StateHasChanged;
    }

    public void Dispose()
    {
        CategoryService.OnChanged -= StateHasChanged;
    }

    private void CreateNewCategory()
    {
        EditingCategory = CategoryService.CreateNewCategory();

    }

    private void EditCategory(Category category)
    {
        category.Editing = true;
        EditingCategory = category;
    }

    private async Task UpdateCategory()
    {
        if (EditingCategory.IsNew)
            await CategoryService.AddCategory(EditingCategory);
        else
            await CategoryService.UpdateCategory(EditingCategory);

        EditingCategory = new Category();
    }

    private async Task CancelEditing()
    {
        EditingCategory = new Category();
        await CategoryService.GetAdminCategories();
    }

    private async Task DeleteCategory(int id)
    {
        await CategoryService.DeleteCategory(id);
    }
}
