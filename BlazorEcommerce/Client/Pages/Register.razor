@page "/register"
@inject IAuthService AuthService

<MainTitle Title="Register"></MainTitle>

<h3>Register</h3>

<EditForm Model="_user" OnValidSubmit="HandleRegisteration">
    <DataAnnotationsValidator />
    <div class="mb-3 ">
        <label for="email">Email</label>
        <InputText id="email" @bind-Value="_user.Email" class="form-control"/>
        <ValidationMessage For="() => _user.Email"/>
    </div>
    <div class="mb-3 ">
        <label for="password">Password</label>
        <InputText type="password" id="password" @bind-Value="_user.Password" class="form-control" />
        <ValidationMessage For="() => _user.Password" />
    </div>
    <div class="mb-3 ">
        <label for="confirm-password">Confirm Password</label>
        <InputText type="password" id="confirm-password" @bind-Value="_user.ConfirmPassword" class="form-control"/>
        <ValidationMessage For="() => _user.ConfirmPassword" />
    </div>
    <button type="submit" class="btn btn-primary">Register</button>
    <div class="@_messageCssClass">
        <span>@_message</span>
    </div>
    @*
    <ValidationSummary />
    *@
</EditForm>

@code
{
    private readonly UserRegister _user = new();

    string _message = string.Empty;
    string _messageCssClass = string.Empty;


    async Task HandleRegisteration()
    {
        var result = await AuthService.Register(_user);
        _message = result.Message;

        _messageCssClass = result.Success ? "text-success" : "text-danger";

    }
}
