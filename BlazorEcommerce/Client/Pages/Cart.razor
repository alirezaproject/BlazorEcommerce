@page "/cart"
@inject ICartService CartService

<MainTitle Title="سبد خرید"></MainTitle>

@if (CartProduct.Count == 0)
{
    <span>@_message</span>
}
else
{

    <div>
        @foreach (var product in CartProduct)
        {
            <div class="container">
                <div class="image-wrapper">
                    <img src="@product.ImageUrl" class="image" />
                </div>
                <div class="name">
                    <h5><a href="/product/@product.ProductId">@product.Title</a></h5>
                    <span>@product.ProductType</span><br />
                    <button class="btn-delete" @onclick="() => RemoveProductFromCart(product.ProductId,product.ProductTypeId)">Delete</button>
                </div>
                <div class="cart-product-price">$@product.Price</div>
            </div>
        }
        <div class="cart-product-price">
            Total (@CartProduct.Count) : $@CartProduct.Sum(product => product.Price)
        </div>
    </div>

}


@code {

    public List<CartProductResponse> CartProduct { get; set; } = new();
    private string _message = "Loading Cart ...";

    protected override async Task OnInitializedAsync()
    {
        await LoadCart();
    }

    private async Task RemoveProductFromCart(int productId, int productTypeId)
    {
        await CartService.RemoveProductFromCart(productId, productTypeId);
        await LoadCart();
    }

    private async Task LoadCart()
    {
        if ((await CartService.GetCartItemsAsync()).Count == 0)
        {

            _message = "Your cart is empty .";
            CartProduct = new List<CartProductResponse>();
        }
        else
        {
            CartProduct = await CartService.GetCartProductsAsync();
        }
    }

}